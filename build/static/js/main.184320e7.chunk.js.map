{"version":3,"sources":["firebase.js","actions/index.js","reducers/index.js","reducers/lists.js","components/NavBar/NavBar.js","components/Page/PageBoundary/PageBoundary.js","components/Page/Page.js","components/Loader/Loader.js","pages/Lists/Sections/ListsSection/ListsSection.js","pages/Lists/ListsPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","LISTS_HAS_ERROED","LISTS_IS_LOADING","LISTS_FETCH_SUCCESS","listsIsLoading","isLoading","type","reducers","combineReducers","lists","state","arguments","length","undefined","action","listsHasErrored","hasErrored","store","createStore","applyMiddleware","reduxThunk","NavBar","react_default","a","createElement","className","react_router_dom","to","PageBoundary_PageBoundary","props","newProps","Object","objectSpread","full","small","forEach","e","clazzes","concat","assign","children","Page_Page","titleHelmet","bg","title","style","background","classes","console","exception","Helmet","Loader","ListsSection","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","listsFetch","map","list","id","name","Loader_Loader","React","Component","connect","dispatch","collection","get","then","snapshot","doc","push","data","log","listsFetchSuccess","catch","error","Lists_ListsPage","Sections_ListsSection_ListsSection","App","NavBar_NavBar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.184320e7.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBkSW3Z7mdatqXGW-IkDWiaGtS0QqJuoF4\",\r\n    authDomain: \"fir-todo-app-36e55.firebaseapp.com\",\r\n    databaseURL: \"https://fir-todo-app-36e55.firebaseio.com\",\r\n    projectId: \"fir-todo-app-36e55\",\r\n    storageBucket: \"fir-todo-app-36e55.appspot.com\",\r\n    messagingSenderId: \"723928349232\",\r\n    appId: \"1:723928349232:web:fd7f649c81a2dcd6\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;","import {firestore} from '../firebase';\r\nimport { list } from 'postcss';\r\n\r\nexport const LISTS_FETCH = 'lists_fetch';\r\nexport const LISTS_HAS_ERROED = 'lists_has_erroed';\r\nexport const LISTS_IS_LOADING = 'lists_is_loading';\r\nexport const LISTS_FETCH_SUCCESS = 'lists_fetch_success';\r\n\r\nexport function listsHasErrored(hasErrored) {\r\n    return {\r\n        type: LISTS_HAS_ERROED,\r\n        hasErrored\r\n    }\r\n}\r\n\r\nexport function listsIsLoading(isLoading) {\r\n    return {\r\n        type: LISTS_IS_LOADING,\r\n        isLoading\r\n    }\r\n}\r\n\r\nexport function listsFetchSuccess(lists) {\r\n    return {\r\n        type: LISTS_FETCH_SUCCESS,\r\n        lists\r\n    }\r\n}\r\n\r\nexport function listsFetch() {\r\n    return dispatch => {\r\n        dispatch(listsIsLoading(true));\r\n\r\n        firestore.collection('lists').get().then(snapshot => {\r\n            const lists = [];\r\n            snapshot.forEach(doc => {\r\n                lists.push({\r\n                    id: doc.id,\r\n                    name: doc.data().name\r\n                })\r\n            });\r\n            console.log(lists)\r\n            dispatch(listsIsLoading(false));\r\n            dispatch(listsFetchSuccess(lists));\r\n        }).catch(error => {\r\n            console.error(error);\r\n            dispatch(listsHasErrored(true));\r\n        })\r\n    }\r\n}","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport {lists, listsHasErrored, listsIsLoading} from './lists';\r\n\r\nconst reducers = combineReducers({\r\n    lists,\r\n    listsHasErrored,\r\n    listsIsLoading\r\n});\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nexport default store;","import {\r\n    LISTS_FETCH_SUCCESS,\r\n    LISTS_HAS_ERROED,\r\n    LISTS_IS_LOADING\r\n} from '../actions/index';\r\n\r\nexport function listsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case LISTS_HAS_ERROED:\r\n            return action.hasErrored;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function listsIsLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case LISTS_IS_LOADING:\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function lists(state = [], action) {\r\n    switch (action.type) {\r\n        case LISTS_FETCH_SUCCESS:\r\n            return action.lists;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './NavBar.scss';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className=\"c-navbar\">\r\n        <Link className=\"c-navbar__logo-container\" to=\"/\">\r\n            <div className=\"c-navbar__logo\">\r\n                Firebase Todo App\r\n            </div>\r\n        </Link>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './PageBoundary.scss';\r\n\r\nexport default (props) => {\r\n  let newProps = { ...props };\r\n  let { full, small, className } = props;\r\n\r\n  [\"full\",\"small\"].forEach(e => delete newProps[e]);\r\n\r\n  let clazzes = \"c-page-boundary\";\r\n  if(full) clazzes += \" is-full\";\r\n  if(small) clazzes += \" is-small\";\r\n  if(className) clazzes += ` ${className}`\r\n\r\n  return (\r\n    <div {...newProps} className={ clazzes }>\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport PageBoundary from './PageBoundary/PageBoundary';\r\n\r\nimport './Page.scss';\r\n\r\nexport default props => {\r\n    let { title, style, className, children, background } = props;\r\n\r\n    //Switch classes\r\n    let classes = `c-page ${className||\"\"}`;\r\n\r\n    //Setup page title\r\n    let titleHelmet;\r\n    if((!title || !title.length) && style !== \"home-page\") console.exception(`This page (${style||className}) does not have a title!`);\r\n    titleHelmet = <title>{ title }</title>\r\n\r\n    //Extras\r\n    let bg;\r\n    if(background) {\r\n        bg = <div className=\"c-page__background\" style={{background: background}}/>;\r\n        classes += ' has-background';\r\n    }\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <Helmet >\r\n            { titleHelmet }\r\n            </Helmet>\r\n            { bg }\r\n            { children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {\r\n    PageBoundary\r\n}","import React from 'react';\r\n\r\nimport './Loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className='o-loader'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {listsFetch} from '../../../../actions';\r\n\r\nimport Loader from '../../../../components/Loader/Loader';\r\n\r\nimport './ListsSection.scss';\r\n\r\nclass ListsSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.listsFetch();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"c-listsSection\">\r\n                {\r\n                    this.props.lists.map(list => {\r\n                        return <div>List Id: {list.id} List Name: {list.name}</div>\r\n                    })\r\n                }\r\n                <Loader />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lists: state.lists\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {listsFetch})(ListsSection);","import React from 'react';\r\n\r\nimport Page, {PageBoundary} from '../../components/Page/Page';\r\n\r\nimport ListsSection from './Sections/ListsSection/ListsSection';\r\n\r\nimport './ListsPage.scss';\r\n\r\nexport default props => {\r\n    return (\r\n        <Page\r\n            style=\"lists-page\"\r\n            className=\"p-lists-page\"\r\n            title='Lists'\r\n            background=\"linear-gradient(40deg,#45cafc,#303f9f)\"\r\n        >\r\n            <PageBoundary>\r\n                <ListsSection />\r\n            </PageBoundary>\r\n        </Page>\r\n    )\r\n}","import React from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport NavBar from './components/NavBar/NavBar';\n\nimport ListsPage from './pages/Lists/ListsPage';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"c-app\">\n            <header>\n                <NavBar />\n            </header>\n            <main>\n                <ListsPage />\n            </main>\n            <footer>\n            </footer>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './reducers';\r\n\r\nimport './styles/main.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}