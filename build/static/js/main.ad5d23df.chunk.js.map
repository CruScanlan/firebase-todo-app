{"version":3,"sources":["assets/icons/pen-solid.svg","assets/icons/right-chevron.svg","assets/icons/tick.svg","assets/icons/ticked.svg","firebase.js","actions/index.js","reducers/index.js","reducers/lists.js","components/NavBar/NavBar.js","components/Page/PageBoundary/PageBoundary.js","components/Page/Page.js","components/Loader/Loader.js","pages/Lists/Sections/ListsSection/ListsSection.js","pages/Lists/Sections/AddListSection/AddListSection.js","pages/Lists/ListsPage.js","pages/List/Sections/ListHeader/ListHeaderSection.js","pages/List/Sections/AddItem/AddItemSection.js","pages/List/Sections/ListItems/ListItemsSection.js","pages/List/ListPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","LISTS_HAS_ERROED","LISTS_IS_LOADING","LISTS_FETCH_SUCCESS","listsIsLoading","isLoading","type","LISTS_SET_NAME","LISTS_ADD_LIST_SUCCESS","LISTS_SET_OLD","LIST_ITEMS_HAS_ERROED","LIST_ITEMS_IS_LOADING","LIST_ITEMS_FETCH_SUCCESS","listItemsIsLoading","listId","itemsIsLoading","LIST_ITEMS_SET_COMPLETED","LIST_ITEMS_ADD_SUCCESS","reducers","combineReducers","lists","state","arguments","length","undefined","action","map","list","id","Object","assign","items","itemsHasErrored","name","_","concat","objectSpread","new","listItem","itemId","completed","newList","push","item","listsHasErrored","hasErrored","middleware","reduxThunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","apply","NavBar","react_default","a","createElement","className","react_router_dom","to","PageBoundary_PageBoundary","props","newProps","full","small","forEach","e","clazzes","children","Page_Page","titleHelmet","bg","title","style","background","classes","console","exception","Helmet","Loader","ListsSection","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","listsFetch","Loader_Loader","react_router","pathname","listName","shouldEdit","key","src","rightChevronSvg","getRenderedLists","React","Component","connect","dispatch","collection","get","then","snapshot","doc","data","listsFetchSuccess","catch","error","AddListSection","_this","onClick","listsAddList","add","ref","Lists_ListsPage","Sections_ListsSection_ListsSection","Sections_AddListSection_AddListSection","ListHeaderSection","editing","handlePenClick","bind","assertThisInitialized","handleInputChange","inputRef","createRef","current","focus","setState","listsSetOld","listsSetName","target","value","staticClasses","editableClasses","penSvg","onSubmit","onChange","placeholder","update","AddItemSection","handleNameChange","handleSubmit","preventDefault","listItemsAdd","created","Timestamp","now","listItemsAddSuccess","ListItemsSection","handleTickEvent","_this2","find","listItemsFetch","listItemsSetCompleted","_this3","renderTick","_this4","tickedSvg","tickSvg","renderListItems","getList","orderBy","listItemsFetchSuccess","listItemsHasErrored","withRouter","location","Sections_ListHeader_ListHeaderSection","match","params","Sections_AddItem_AddItemSection","Sections_ListItems_ListItemsSection","App","NavBar_NavBar","path","component","ListPage","exact","ListsPage","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad5d23df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen-solid.462addfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-chevron.39d0c3c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.1ca10308.svg\";","module.exports = __webpack_public_path__ + \"static/media/ticked.ed9b61fc.svg\";","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBkSW3Z7mdatqXGW-IkDWiaGtS0QqJuoF4\",\r\n    authDomain: \"fir-todo-app-36e55.firebaseapp.com\",\r\n    databaseURL: \"https://fir-todo-app-36e55.firebaseio.com\",\r\n    projectId: \"fir-todo-app-36e55\",\r\n    storageBucket: \"fir-todo-app-36e55.appspot.com\",\r\n    messagingSenderId: \"723928349232\",\r\n    appId: \"1:723928349232:web:fd7f649c81a2dcd6\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;","import firebase, {firestore} from '../firebase';\r\n\r\nexport const LISTS_FETCH = 'lists_fetch';\r\nexport const LISTS_HAS_ERROED = 'lists_has_erroed';\r\nexport const LISTS_IS_LOADING = 'lists_is_loading';\r\nexport const LISTS_FETCH_SUCCESS = 'lists_fetch_success';\r\n\r\nexport function listsHasErrored(hasErrored) {\r\n    return {\r\n        type: LISTS_HAS_ERROED,\r\n        hasErrored\r\n    }\r\n}\r\n\r\nexport function listsIsLoading(isLoading) {\r\n    return {\r\n        type: LISTS_IS_LOADING,\r\n        isLoading\r\n    }\r\n}\r\n\r\nexport function listsFetchSuccess(lists) {\r\n    return {\r\n        type: LISTS_FETCH_SUCCESS,\r\n        lists\r\n    }\r\n}\r\n\r\nexport function listsFetch() {\r\n    return dispatch => {\r\n        dispatch(listsIsLoading(true));\r\n\r\n        firestore.collection('lists').get().then(snapshot => {\r\n            const lists = [];\r\n            snapshot.forEach(doc => {\r\n                lists.push({\r\n                    id: doc.id,\r\n                    items: [],\r\n                    itemsHasErrored: false,\r\n                    itemsIsLoading: false,\r\n                    name: doc.data().name\r\n                })\r\n            });\r\n            dispatch(listsIsLoading(false));\r\n            dispatch(listsFetchSuccess(lists));\r\n        }).catch(error => {\r\n            console.error(error);\r\n            dispatch(listsHasErrored(true));\r\n        })\r\n    }\r\n}\r\n\r\nexport const LISTS_SET_NAME = 'lists_set_name';\r\nexport const LISTS_ADD_LIST = 'lists_add_list';\r\nexport const LISTS_ADD_LIST_SUCCESS = 'lists_add_list_success';\r\nexport const LISTS_SET_OLD = 'lists_set_old';\r\n\r\nexport function listsSetName(listId, name) {\r\n    firestore.collection('lists').doc(listId).update({name});\r\n\r\n    return {\r\n        type: LISTS_SET_NAME,\r\n        listId\r\n    }\r\n}\r\n\r\nexport function listsAddListSuccess(list) {\r\n    return {\r\n        type: LISTS_ADD_LIST_SUCCESS,\r\n        list\r\n    }\r\n}\r\n\r\nexport function listsAddList() {\r\n    return dispatch => {\r\n        firestore.collection('lists').add({\r\n            name: ''\r\n        }).then(ref => {\r\n            ref.get().then(snapshot => {\r\n                dispatch(listsAddListSuccess({\r\n                    id: ref.id,\r\n                    ...snapshot.data()\r\n                }));\r\n            });\r\n        }).catch(error => {\r\n            console.error(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function listsSetOld(listId) {\r\n    return {\r\n        type: LISTS_SET_OLD,\r\n        listId\r\n    }\r\n}\r\n\r\nexport const LIST_ITEMS_FETCH = 'list_items_fetch';\r\nexport const LIST_ITEMS_HAS_ERROED = 'list_items_has_erroed';\r\nexport const LIST_ITEMS_IS_LOADING = 'list_items_is_loading';\r\nexport const LIST_ITEMS_FETCH_SUCCESS = 'list_items_fetch_success';\r\n\r\nexport function listItemsHasErrored(listId, itemsHasErrored) {\r\n    return {\r\n        type: LIST_ITEMS_HAS_ERROED,\r\n        listId,\r\n        itemsHasErrored\r\n    }\r\n}\r\n\r\nexport function listItemsIsLoading(listId, itemsIsLoading) {\r\n    return {\r\n        type: LIST_ITEMS_IS_LOADING,\r\n        listId,\r\n        itemsIsLoading\r\n    }\r\n}\r\n\r\nexport function listItemsFetchSuccess(listId, items) {\r\n    return {\r\n        type: LIST_ITEMS_FETCH_SUCCESS,\r\n        listId,\r\n        items\r\n    }\r\n}\r\n\r\nexport function listItemsFetch(listId) {\r\n    return dispatch => {\r\n        dispatch(listItemsIsLoading(listId, true));\r\n\r\n        firestore.collection('lists').doc(listId).collection('items').orderBy('created').get().then(snapshot => {\r\n            let items = [];\r\n            snapshot.forEach(doc => {\r\n                items.push({\r\n                    id: doc.id,\r\n                    completed: doc.data().completed,\r\n                    name: doc.data().name,\r\n                    created: doc.data().created\r\n                })\r\n            });\r\n            dispatch(listItemsIsLoading(listId, false));\r\n            dispatch(listItemsFetchSuccess(listId, items));\r\n        }).catch(error => {\r\n            console.error(error);\r\n            dispatch(listItemsHasErrored(listId, true));\r\n        })\r\n    }\r\n}\r\n\r\nexport const LIST_ITEMS_SET_COMPLETED = 'list_items_set_completed';\r\nexport const LIST_ITEMS_ADD = 'list_items_add';\r\nexport const LIST_ITEMS_ADD_SUCCESS = 'list_items_add_success';\r\n\r\nexport function listItemsSetCompleted(listId, itemId, completed) {\r\n    firestore.collection('lists').doc(listId).collection('items').doc(itemId).update({completed});\r\n\r\n    return {\r\n        type: LIST_ITEMS_SET_COMPLETED,\r\n        listId,\r\n        itemId,\r\n        completed\r\n    }\r\n}\r\n\r\nexport function listItemsAddSuccess(listId, item) {\r\n    return {\r\n        type: LIST_ITEMS_ADD_SUCCESS,\r\n        listId,\r\n        item\r\n    }\r\n}\r\n\r\nexport function listItemsAdd(listId, name) {\r\n    return dispatch => {\r\n        firestore.collection('lists').doc(listId).collection('items').add({\r\n            name,\r\n            created: firebase.firestore.Timestamp.now(),\r\n            completed: false\r\n        }).then(ref => {\r\n            dispatch(listItemsAddSuccess(listId, {id: ref.id, name, completed: false}));\r\n        })\r\n    }\r\n}","import {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport {lists, listsHasErrored, listsIsLoading} from './lists';\r\n\r\nconst reducers = combineReducers({\r\n    lists,\r\n    listsHasErrored,\r\n    listsIsLoading\r\n});\r\n\r\nconst middleware = [\r\n    reduxThunk\r\n];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(reducers, {}, composeEnhancers(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import _ from 'lodash';\r\n\r\nimport {\r\n    LISTS_FETCH_SUCCESS,\r\n    LISTS_HAS_ERROED,\r\n    LISTS_IS_LOADING,\r\n    LISTS_SET_NAME,\r\n    LISTS_ADD_LIST_SUCCESS,\r\n    LISTS_SET_OLD,\r\n    LIST_ITEMS_HAS_ERROED,\r\n    LIST_ITEMS_IS_LOADING,\r\n    LIST_ITEMS_FETCH_SUCCESS,\r\n    LIST_ITEMS_SET_COMPLETED,\r\n    LIST_ITEMS_ADD_SUCCESS\r\n} from '../actions/index';\r\n\r\nexport function listsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case LISTS_HAS_ERROED:\r\n            return action.hasErrored;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function listsIsLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case LISTS_IS_LOADING:\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function lists(state = [], action) {\r\n    switch (action.type) {\r\n        case LISTS_FETCH_SUCCESS:\r\n            return action.lists;\r\n\r\n        case LIST_ITEMS_FETCH_SUCCESS:\r\n            return state.map(list => {\r\n                if(list.id !== action.listId) return list;\r\n                return Object.assign({}, list, {\r\n                    items: action.items\r\n                });\r\n            })\r\n\r\n        case LIST_ITEMS_HAS_ERROED:\r\n            return state.map(list => {\r\n                if(list.id !== action.listId) return list;\r\n                return Object.assign({}, list, {\r\n                    itemsHasErrored: action.itemsHasErrored\r\n                });\r\n            })\r\n\r\n        case LIST_ITEMS_IS_LOADING:\r\n            return state.map(list => {\r\n                if(list.id !== action.listId) return list;\r\n                return Object.assign({}, list, {\r\n                    itemsIsLoading: action.itemsIsLoading\r\n                });\r\n            })\r\n\r\n        case LISTS_SET_NAME:\r\n            return state.map(list => {\r\n                if(list.id !== action.listId) return list;\r\n                return Object.assign({}, list, {\r\n                    name: action.name\r\n                });\r\n            })\r\n\r\n        case LISTS_ADD_LIST_SUCCESS: \r\n            return _.concat(state, {...action.list, new: true});\r\n\r\n        case LISTS_SET_OLD:\r\n            return state.map(list => {\r\n                if(list.id !== action.listId) return list;\r\n                return Object.assign({}, list, {\r\n                    new: false\r\n                });\r\n            })\r\n\r\n        case LIST_ITEMS_SET_COMPLETED:\r\n            return state.map(list => {\r\n                if(list.id !== action.listId) return list;\r\n                list.items = list.items.map(listItem => {\r\n                    if(listItem.id !== action.itemId) return listItem;\r\n                    return Object.assign({}, listItem, {\r\n                        completed: action.completed\r\n                    });\r\n                });\r\n                return list;\r\n            })\r\n\r\n        case LIST_ITEMS_ADD_SUCCESS:\r\n            return state.map(list => {\r\n                if(list.id !== action.listId) return list;\r\n                const newList = Object.assign({}, list);\r\n                newList.items.push(action.item);\r\n                return newList;\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './NavBar.scss';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className=\"c-navbar\">\r\n        <Link className=\"c-navbar__logo-container\" to=\"/\">\r\n            <div className=\"c-navbar__logo\">\r\n                Firebase Todo App\r\n            </div>\r\n        </Link>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './PageBoundary.scss';\r\n\r\nexport default (props) => {\r\n  let newProps = { ...props };\r\n  let { full, small, className } = props;\r\n\r\n  [\"full\",\"small\"].forEach(e => delete newProps[e]);\r\n\r\n  let clazzes = \"c-page-boundary\";\r\n  if(full) clazzes += \" is-full\";\r\n  if(small) clazzes += \" is-small\";\r\n  if(className) clazzes += ` ${className}`\r\n\r\n  return (\r\n    <div {...newProps} className={ clazzes }>\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport PageBoundary from './PageBoundary/PageBoundary';\r\n\r\nimport './Page.scss';\r\n\r\nexport default props => {\r\n    let { title, style, className, children, background } = props;\r\n\r\n    //Switch classes\r\n    let classes = `c-page ${className||\"\"}`;\r\n\r\n    //Setup page title\r\n    let titleHelmet;\r\n    if((!title || !title.length) && style !== \"home-page\") console.exception(`This page (${style||className}) does not have a title!`);\r\n    titleHelmet = <title>{ title }</title>\r\n\r\n    //Extras\r\n    let bg;\r\n    if(background) {\r\n        bg = <div className=\"c-page__background\" style={{background: background}}/>;\r\n        classes += ' has-background';\r\n    }\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <Helmet >\r\n            { titleHelmet }\r\n            </Helmet>\r\n            { bg }\r\n            { children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {\r\n    PageBoundary\r\n}","import React from 'react';\r\n\r\nimport './Loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className='o-loader'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {listsFetch} from '../../../../actions';\r\n\r\nimport Loader from '../../../../components/Loader/Loader';\r\nimport rightChevronSvg from '../../../../assets/icons/right-chevron.svg';\r\n\r\nimport './ListsSection.scss';\r\n\r\nclass ListsSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.listsFetch();\r\n    }\r\n\r\n    getRenderedLists() {\r\n        if(this.props.listsIsLoading) {\r\n            return (\r\n                <div className=\"c-listsSection__loaderContainer\">\r\n                    <Loader />\r\n                </div>\r\n            )\r\n        }\r\n        if(this.props.listsHasErrored) {\r\n            return (\r\n                <div>\r\n                    Error Loading Lists\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.lists.map(list => {\r\n            if(list.new) return <Redirect to={{pathname: `/list/${list.id}`, state:{listName: list.name, listId: list.id, shouldEdit: true}}} />\r\n            return (\r\n                <Link className=\"c-listsSection__listItem\" key={list.id} to={{pathname: `/list/${list.id}`, state:{listName: list.name, listId: list.id}}}>\r\n                    <div className=\"c-listsSection__listItem-name\">\r\n                        {list.name}\r\n                    </div>\r\n                    <img className=\"c-listsSection__listItem-chevron\" src={rightChevronSvg}/>\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"c-listsSection\">\r\n                <div className=\"c-listsSection__list\">\r\n                    <div className=\"c-listsSection__list-titleContainer\">\r\n                        <h2>Lists</h2>\r\n                    </div>\r\n                    <div className=\"c-listsSection__list-container\">\r\n                        {this.getRenderedLists()}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n\r\n*/\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lists: state.lists,\r\n        listsIsLoading: state.listsIsLoading,\r\n        listsHasErrored: state.listsHasErrored\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {listsFetch})(ListsSection);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {listsAddList} from '../../../../actions';\r\n\r\nimport './AddListSection.scss';\r\n\r\nclass AddListSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"c-addListSection\">\r\n                <button className=\"c-addListSection__button\" onClick={() => this.props.listsAddList()}>\r\n                    Add New List\r\n                </button>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {listsAddList})(AddListSection);","import React from 'react';\r\n\r\nimport Page, {PageBoundary} from '../../components/Page/Page';\r\n\r\nimport ListsSection from './Sections/ListsSection/ListsSection';\r\nimport AddListSection from './Sections/AddListSection/AddListSection';\r\n\r\nimport './ListsPage.scss';\r\n\r\nexport default props => {\r\n    return (\r\n        <Page\r\n            style=\"listsPage\"\r\n            className=\"p-listsPage\"\r\n            title='Lists'\r\n            background=\"linear-gradient(40deg,#45cafc,#303f9f)\"\r\n        >\r\n            <div className=\"p-listsPage__inner\">\r\n                <PageBoundary>\r\n                    <ListsSection />\r\n                    <AddListSection />\r\n                </PageBoundary>\r\n            </div>\r\n        </Page>\r\n    )\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {listsSetName, listsSetOld} from '../../../../actions';\r\n\r\nimport penSvg from '../../../../assets/icons/pen-solid.svg';\r\n\r\nimport './ListHeaderSection.scss';\r\n\r\nclass ListHeaderSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editing: !!this.props.shouldEdit,\r\n            name: this.props.listName\r\n        };\r\n\r\n        this.handlePenClick = this.handlePenClick.bind(this);\r\n        this.handleInputChange= this.handleInputChange.bind(this);\r\n\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.shouldEdit) this.inputRef.current.focus();\r\n    }\r\n\r\n    handlePenClick() {\r\n        if(this.state.name === '') return;\r\n        this.setState({\r\n            editing: !this.state.editing\r\n        });\r\n        if(!!this.props.shouldEdit) this.props.listsSetOld(this.props.listId);\r\n        this.props.listsSetName(this.props.listId, this.state.name);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const staticClasses = this.state.editing ? 'c-listHeaderSection__static c-listHeaderSection__static-isInactive' : 'c-listHeaderSection__static';\r\n        const editableClasses = this.state.editing ? 'c-listHeaderSection__editable c-listHeaderSection__editable-isActive' : 'c-listHeaderSection__editable';\r\n\r\n        return (\r\n            <section className=\"c-listHeaderSection\">\r\n                <div className={staticClasses}>\r\n                    <div className=\"c-listHeaderSection__static-title\">\r\n                        <h2>{this.state.name}</h2>\r\n                    </div>\r\n                    <img src={penSvg} className=\"c-listHeaderSection__static-pen\" onClick={this.handlePenClick}/>\r\n                </div>\r\n                <div className={editableClasses}>\r\n                    <form className=\"c-listHeaderSection__editable-form\" onSubmit={this.handlePenClick}>\r\n                        <input type=\"text\" className=\"c-listHeaderSection__editable-title\" onChange={this.handleInputChange} value={this.state.name}  ref={this.inputRef} placeholder=\"List Name\"/>\r\n                    </form>\r\n                    <img src={penSvg} className=\"c-listHeaderSection__static-pen\" onClick={this.handlePenClick}/>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {listsSetName, listsSetOld})(ListHeaderSection);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {listItemsAdd} from '../../../../actions';\r\n\r\nimport './AddItemSection.scss';\r\n\r\nclass AddItemSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: ''\r\n        }\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!!!this.props.shouldEdit) this.inputRef.current.focus();\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        if(!!this.props.shouldEdit) return;\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.name === '') return;\r\n        this.props.listItemsAdd(this.props.listId, this.state.name);\r\n        this.setState({\r\n            name: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"c-addItemSection\">\r\n                <div className=\"c-addItemSection__text\">\r\n                    <h4>Add Item</h4>\r\n                </div>\r\n                <form className=\"c-addItemSection__form\">\r\n                    <input className=\"c-addItemSection__form-text\" type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleNameChange} ref={this.inputRef} placeholder=\"List Item Name\"/>\r\n                    <button className=\"c-addItemSection__form-submit\" onClick={this.handleSubmit}>Add</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {listItemsAdd})(AddItemSection);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {listItemsFetch, listItemsSetCompleted} from '../../../../actions';\r\n\r\nimport Loader from '../../../../components/Loader/Loader';\r\n\r\nimport tickSvg from '../../../../assets/icons/tick.svg';\r\nimport tickedSvg from '../../../../assets/icons/ticked.svg';\r\n\r\nimport './ListItemsSection.scss';\r\n\r\nclass ListItemsSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleTickEvent = this.handleTickEvent.bind(this);\r\n    }\r\n\r\n    getList() {\r\n        if(!this.props.lists || this.props.lists.length === 0) return undefined;\r\n        return this.props.lists.find(list => list.id === this.props.listId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.listItemsFetch(this.props.listId);\r\n    }\r\n\r\n    handleTickEvent(item) {\r\n        this.props.listItemsSetCompleted(this.props.listId, item.id, !item.completed);\r\n    }\r\n\r\n    renderListItems(list) {\r\n        if(list.itemsIsLoading) {\r\n            return (\r\n                <div className=\"c-listItemsSection__loaderContainer\">\r\n                    <Loader />\r\n                </div>\r\n            )\r\n        }\r\n        if(list.itemsHasErrored) {\r\n            return (\r\n                <div>\r\n                    Error loading items\r\n                </div>\r\n            )\r\n        }\r\n        if(!list.items) return <div></div>\r\n        return list.items.map(item => {\r\n            return (\r\n                <div className=\"c-listItemsSection__item\" key={item.id}>                        \r\n                    <h5>{item.name}</h5>\r\n                    {this.renderTick(item)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderTick(item) {\r\n        return <img className=\"c-listItemsSection__item-tick\" src={item.completed ? tickedSvg : tickSvg} onClick={() => this.handleTickEvent(item)} />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"c-listItemsSection\">\r\n               {this.renderListItems(this.getList())}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lists: state.lists\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {listItemsFetch, listItemsSetCompleted})(ListItemsSection);","import React from 'react';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nimport Page, {PageBoundary} from '../../components/Page/Page';\r\n\r\nimport ListHeaderSection from './Sections/ListHeader/ListHeaderSection';\r\nimport AddItemSection from './Sections/AddItem/AddItemSection';\r\nimport ListItemsSection from './Sections/ListItems/ListItemsSection';\r\n\r\nimport './ListPage.scss';\r\n\r\nexport default withRouter(props => {\r\n    if(!props.location.state) return <Redirect to=\"/\" />\r\n    return (\r\n        <Page\r\n            style=\"listPage\"\r\n            className=\"p-listPage\"\r\n            title={`${props.location.state.listName} | List`}\r\n            background=\"linear-gradient(40deg,#45cafc,#303f9f)\"\r\n        >\r\n            <div className=\"p-listPage__inner\">\r\n                <PageBoundary>\r\n                    <ListHeaderSection listName={props.location.state.listName} listId={props.match.params.listId} shouldEdit={props.location.state.shouldEdit} />\r\n                    <AddItemSection listId={props.match.params.listId} shouldEdit={props.location.state.shouldEdit} />\r\n                    <ListItemsSection listId={props.match.params.listId} />\r\n                </PageBoundary>\r\n            </div>\r\n        </Page>\r\n    )\r\n})","import React from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport NavBar from './components/NavBar/NavBar';\n\nimport ListsPage from './pages/Lists/ListsPage';\nimport ListPage from './pages/List/ListPage';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"c-app\">\n            <header>\n                <NavBar />\n            </header>\n            <main>\n                <Route path=\"/list/:listId\" component={ListPage} />\n                <Route exact path=\"/\" component={ListsPage} />\n            </main>\n            <footer>\n            </footer>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './reducers';\r\n\r\nimport './styles/main.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}